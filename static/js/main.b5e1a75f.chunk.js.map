{"version":3,"sources":["UserInfo/UserInfo.jsx","Card/Card.jsx","Popup/EditUserPopup/EditUserPopup.jsx","Popup/AddCardPopup/AddCardPopup.jsx","Popup/ImgPopup/ImgPopup.jsx","App/App.jsx","reportWebVitals.js","index.js"],"names":["UserImage","props","src","className","alt","UserText","name","description","UserInfo","info","avatar","onClick","openEditUserPopup","openAddCardPopup","Card","useState","liked","setLiked","toggleLike","prevLiked","draggableId","identifier","toString","index","provided","ref","innerRef","draggableProps","dragHandleProps","link","title","onImgClick","EditUserPopup","onChange","event","target","id","value","open","noValidate","onSubmit","e","type","placeholder","required","AddCardPopup","card","ImgPopup","onOverlayClick","App","setInfo","cardList","setCardList","isOpen","userPopupInfo","setUserPopupInfo","cardPopupInfo","setCardPopupInfo","imgOpenPopupInfo","setImgOpenPopupInfo","toggleEditUser","prevState","toggleAddCard","toggleImgOpen","onKeyDown","code","tabIndex","onDragEnd","result","cards","Array","from","splice","source","reorderedCards","destination","droppableId","droppableProps","map","filter","field","preventDefault","onUserEditSubmit","newCard","length","onAddCardSubmit","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5e1a75f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./UserInfo.css\";\r\n\r\nfunction UserImage(props) {\r\n  return <img src={props.src} className=\"user__link\" alt=\"User\" />;\r\n}\r\n\r\nfunction UserText(props) {\r\n  return (\r\n    <div className=\"user__text\">\r\n      <div className=\"user__name\">{props.name}</div>\r\n      <div className=\"user__description\">{props.description}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function UserInfo(props) {\r\n  return (\r\n    <header className=\"user\">\r\n      <h2 className=\"user__header\">Around</h2>\r\n      <hr />\r\n      <div className=\"user__profile\">\r\n        <div className=\"user__info\">\r\n          <UserImage src={props.info.avatar} />\r\n          <UserText\r\n            name={props.info.name}\r\n            description={props.info.description}\r\n          />\r\n          <button\r\n            className=\"user__edit-info-button\"\r\n            onClick={props.openEditUserPopup}\r\n          ></button>\r\n        </div>\r\n        <button\r\n          className=\"user__add-card-button\"\r\n          onClick={props.openAddCardPopup}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import \"./Card.css\";\r\nimport React, {useState} from \"react\";\r\nimport {Draggable} from 'react-beautiful-dnd';\r\n\r\nexport default function Card(props) {\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const toggleLike = () => {\r\n    setLiked(prevLiked => !prevLiked);\r\n  }\r\n\r\n  return (\r\n    <Draggable key={props.identifier} draggableId={props.identifier.toString()} index={props.index}>\r\n      {(provided) => (\r\n        <li className=\"card\" ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n          <button\r\n            className=\"card__delete-button\"\r\n            onClick={props.onClick}\r\n            aria-label=\"Удалить карточку\"\r\n          ></button>\r\n          <img\r\n            src={props.link}\r\n            alt={props.title}\r\n            className=\"card__foto\"\r\n            onClick={props.onImgClick}\r\n          ></img>\r\n          <div className=\"card__description\">\r\n            <h2 className=\"card__title\">{props.title}</h2>\r\n            <button\r\n              className={liked\r\n                ? \"card__like-button card__like-button_active\"\r\n                : \"card__like-button\"}\r\n              onClick={toggleLike}\r\n              aria-label=\"Поставить лайк\"\r\n            ></button>\r\n          </div>\r\n        </li>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../Popup.css\";\r\n\r\nexport default function EditUserPopup(props) {\r\n  const onChange = (event, onChange) => {\r\n    const id = event.target.id;\r\n    const value = event.target.value;\r\n    onChange(id, value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal modal__form_type_edit-user ${\r\n        props.open ? \"modal_open\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"modal__box\">\r\n        <form\r\n          noValidate\r\n          className=\"modal__form modal__form_type_edit-user\"\r\n          name=\"edit-form\"\r\n          onSubmit={(e) => props.onSubmit(e)}\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"modal__close-button modal__close-button_type-new-place\"\r\n            onClick={props.onClick}\r\n          >\r\n            &times;\r\n          </button>\r\n          <h2 className=\"modal__title\">Edit user</h2>\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal__input modal__input-name\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"User\"\r\n            value={props.name}\r\n            onChange={(event) => onChange(event, props.onChange)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal__input modal__input-description\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"User description\"\r\n            value={props.description}\r\n            onChange={(event) => onChange(event, props.onChange)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal__input modal__input-avatar\"\r\n            id=\"avatar\"\r\n            name=\"avatar\"\r\n            placeholder=\"User avatar link\"\r\n            value={props.avatar}\r\n            onChange={(event) => onChange(event, props.onChange)}\r\n            required\r\n          />\r\n          <button\r\n            className=\"modal__save-button modal__save-button_type_edit-user\"\r\n            id=\"add-modal-button-edit-user\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../Popup.css\";\r\n\r\nexport default function AddCardPopup(props) {\r\n  const onChange = (event, onChange) => {\r\n    const id = event.target.id;\r\n    const value = event.target.value;\r\n    onChange(id, value);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`modal modal__form_type_edit-user ${\r\n        props.open ? \"modal_open\" : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"modal__box\">\r\n        <form\r\n          noValidate\r\n          className=\"modal__form modal__form_type_add-card\"\r\n          name=\"edit-form\"\r\n          onSubmit={(e) => props.onSubmit(e)}\r\n        >\r\n          <button\r\n            type=\"button\"\r\n            className=\"modal__close-button modal__close-button_type-new-place\"\r\n            onClick={props.onClick}\r\n          >\r\n            &times;\r\n          </button>\r\n          <h2 className=\"modal__title\">Add card</h2>\r\n          <input\r\n            type=\"text\"\r\n            className=\"modal__input modal__input-title\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            value={props.title}\r\n            onChange={(event) => onChange(event, props.onChange)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"url\"\r\n            className=\"modal__input modal__input-card-url\"\r\n            id=\"card-url\"\r\n            name=\"card-url\"\r\n            placeholder=\"Card url\"\r\n            value={props.card}\r\n            onChange={(event) => onChange(event, props.onChange)}\r\n            required\r\n          />\r\n          <button\r\n            className=\"modal__save-button modal__save-button_type_add-card\"\r\n            id=\"add-modal-save-button-add-card\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import '../Popup.css'\r\n\r\nexport default function ImgPopup(props) {\r\n  return (\r\n    <div className={`modal modal__open-img ${\r\n        props.open ? \"modal_open\" : \"\"\r\n      }`}\r\n      onClick={(e)=>props.onOverlayClick(e)}\r\n      >\r\n      <div className=\"modal__box modal__box_open-img\">\r\n        <form\r\n          className=\"modal__form modal__form_type_open-img\"\r\n          name=\"large-img\"\r\n        >\r\n          <button\r\n            className=\"modal__close-button modal__close-button_type_open-img\"\r\n            id=\"modal-close-button-open-img\"\r\n            type=\"button\"\r\n            onClick={props.onClick}\r\n          >\r\n            &times;\r\n          </button>\r\n          <img className=\"modal__open-img-image\" src={props.src} alt=\"Imaga\"/>\r\n          <p className=\"modal__open-img-title\">{props.title}</p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport React, {useState} from \"react\";\r\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd';\r\n\r\nimport UserInfo from \"../UserInfo/UserInfo.jsx\";\r\nimport Card from \"../Card/Card.jsx\";\r\nimport EditUserPopup from \"../Popup/EditUserPopup/EditUserPopup.jsx\";\r\nimport AddCardPopup from \"../Popup/AddCardPopup/AddCardPopup.jsx\";\r\nimport ImgPopup from \"../Popup/ImgPopup/ImgPopup.jsx\"\r\n\r\nconst userName = \"Alexandr\";\r\nconst description = \"JS junior Dev\";\r\nconst link =\r\n  \"https://kubnews.ru/upload/iblock/aed/aede721d1ff8a00da41315253fc7aec7.jpg\";\r\n\r\nfunction App(props) {\r\n  const [info, setInfo] = useState({name: userName, description: description, avatar: link});\r\n  const [cardList, setCardList] = useState([\r\n    { title: \"Snake\", link: link, id: 0 },\r\n    { title: \"Snake\", link: link, id: 1 },\r\n    { title: \"Snake\", link: link, id: 2 },\r\n    { title: \"Snake\", link: link, id: 3 },\r\n    { title: \"Snake\", link: link, id: 4 }\r\n  ]);\r\n  const [userPopupInfo, setUserPopupInfo] = useState({isOpen: false, name: '', description: '', avatar: ''});\r\n  const [cardPopupInfo, setCardPopupInfo] = useState({isOpen: false, title: '', link: ''});\r\n  const [imgOpenPopupInfo, setImgOpenPopupInfo] = useState({isOpen: false, title: '', link: ''});\r\n\r\n\r\n  const deleteCard = (id) => {\r\n    setCardList(cardList.filter(card => card.id !== id));\r\n  }\r\n\r\n  const toggleEditUser = () => {\r\n    setUserPopupInfo(prevState => ({...prevState, isOpen: !prevState.isOpen}));\r\n  }\r\n\r\n  const toggleAddCard = () => {\r\n    setCardPopupInfo(prevState => ({...prevState, isOpen: !prevState.isOpen}));\r\n  }\r\n\r\n  const toggleImgOpen = () => {\r\n    setImgOpenPopupInfo(prevState => ({...prevState, isOpen: !prevState.isOpen}));\r\n  }\r\n\r\n  const openImage = (id) => {\r\n    setImgOpenPopupInfo({isOpen: imgOpenPopupInfo.isOpen, title: cardList[id].title, link: cardList[id].link});\r\n    toggleImgOpen();\r\n  }\r\n\r\n  const onUserEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    setInfo({name: userPopupInfo.name, description: userPopupInfo.description, avatar: userPopupInfo.avatar});\r\n    toggleEditUser();\r\n  }\r\n\r\n  const keyPressed = (event) => {\r\n    if (event.code === 'Escape') {\r\n      setUserPopupInfo(prevState => ({...prevState, isOpen: false}));\r\n      setCardPopupInfo(prevState => ({...prevState, isOpen: false}));\r\n      setImgOpenPopupInfo(prevState => ({...prevState, isOpen: false}));\r\n    }\r\n  }\r\n\r\n  const onAddCardSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newCard = {title: cardPopupInfo.title, link: cardPopupInfo.link, id: cardList.length};\r\n    setCardList(prevState => [...prevState, newCard]);\r\n    toggleAddCard();\r\n  };\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    const cards = Array.from(cardList);\r\n    const [reorderedCards] = cards.splice(result.source.index, 1);\r\n    cards.splice(result.destination.index, 0, reorderedCards);\r\n\r\n    setCardList(cards);\r\n  }\r\n\r\n    return (\r\n      <main className=\"main\"\r\n        onKeyDown={(e) => keyPressed(e)}\r\n        tabIndex=\"0\"\r\n      >\r\n        <UserInfo\r\n          info={info}\r\n          openEditUserPopup={() => toggleEditUser()}\r\n          openAddCardPopup={() => toggleAddCard()}\r\n        />\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          <Droppable droppableId=\"cards\">\r\n            {(provided) => (\r\n              <ul type=\"none\" className=\"cards\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                {cardList.map((card, index) => (\r\n                  <Card\r\n                    index={index}\r\n                    key={card.id}\r\n                    identifier={card.id}\r\n                    title={card.title}\r\n                    link={card.link}\r\n                    onClick={() => deleteCard(card.id)}\r\n                    onImgClick={()=> openImage(index)}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n              </ul>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        <EditUserPopup\r\n          onChange={(field, value) => setUserPopupInfo(prevState => ({...prevState, [field]: value}))}\r\n          onSubmit={(e) => onUserEditSubmit(e)}\r\n          onClick={() => toggleEditUser()}\r\n          name={userPopupInfo.name}\r\n          description={userPopupInfo.description}\r\n          avatar={userPopupInfo.avatar}\r\n          open={userPopupInfo.isOpen}\r\n        />\r\n        <AddCardPopup\r\n          onChange={(field, value) => setCardPopupInfo(prevState => ({...prevState, [field]: value}))}\r\n          onSubmit={(e) => onAddCardSubmit(e)}\r\n          onClick={() => toggleAddCard()}\r\n          title={cardPopupInfo.title}\r\n          card={cardPopupInfo.link}\r\n          open={cardPopupInfo.isOpen}\r\n        />\r\n        <ImgPopup\r\n          title={imgOpenPopupInfo.title}\r\n          src={imgOpenPopupInfo.link}\r\n          open={imgOpenPopupInfo.isOpen}\r\n          onClick={()=> toggleImgOpen()}\r\n          onOverlayClick={(e)=>{\r\n            if (e.target === e.currentTarget) {\r\n              toggleImgOpen();\r\n            }\r\n          }}\r\n        />\r\n      </main>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App.jsx';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}